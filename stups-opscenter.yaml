# basic information for generating and executing this definition
SenzaInfo:
  StackName: stups-opscenter
  Parameters:
    - MintBucket:
        Description: "Your S3 bucket where mint will drop OAuth credentials"
    - ScalyrKey:
        Description: "The API key of Scalyr logging service"
    - EtcdDomain:
        Description: "Your etcd appliance domain name"
        Default: ""
    - Authentication:
        Description: "If you want to enable authentication"
        Default: "False"
    - ImageVersion:
        Description: "Opscenter version (for ex. 5.2.0-p0)"
        Default: "5.2.0-p0-SNAPSHOT"
      
# a list of senza components to apply to the definition
SenzaComponents:

  # this basic configuration is required for the other components
  - Configuration:
      Type: Senza::StupsAutoConfiguration # auto-detect network setup

  # will create a launch configuration and auto scaling group with scaling triggers
  - OpsCenter:
      Type: Senza::TaupageAutoScalingGroup
      InstanceType: "t2.medium"
      SecurityGroups:
        - Fn::GetAtt:
          - StupsCassandraOpsCenterSg
          - GroupId
      IamRoles:
        - Ref: StupsCassandraOpsCenterRole
      ElasticLoadBalancer: OpsCenterLoadBalancer
      AssociatePublicIpAddress: false # change for standalone deployment in default VPC
      TaupageConfig:
        root: true
        runtime: Docker
        application_id: "stups-cassandra-opscenter"
        source: "pierone.stups.zalan.do/mop/stups-opscenter:{{Arguments.ImageVersion}}"
        etcd_discovery_domain: "{{Arguments.EtcdDomain}}"
        mint_bucket: "{{Arguments.MintBucket}}"
        health_check_path: /opscenter/index.html
        scalyr_account_key: "{{Arguments.ScalyrKey}}"
        # http://docs.datastax.com/en/opscenter/5.0/opsc/reference/opscPorts_r.html
        ports:
          8888: 8888
          61620: 61620
        environment:
          ENABLED_AUTH: "{{Arguments.Authentication}}"
          


  # creates an ELB entry and Route53 domains to this ELB
  - OpsCenterLoadBalancer:
      Type: Senza::WeightedDnsElasticLoadBalancer
      HTTPPort: 8888
      HealthCheckPath: /opscenter/index.html
      IdleTimeout: 3600
      SecurityGroups:
        - Fn::GetAtt: # ELB SG referencing requires using GetAtt
          - StupsCassandraOpsCenterLbSg
          - GroupId

Resources:       
  StupsCassandraOpsCenterSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OpsCenter ports
      SecurityGroupIngress:
      - IpProtocol: tcp # OpsCenter (opscenterd) receiving traffic from agent
        FromPort: 61620
        ToPort: 61620
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp # Allow access for human reading and health checks
        FromPort: 8888
        ToPort: 8888
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp # SSH
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0        
  StupsCassandraOpsCenterLbSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OpsCenter LB ports
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

  StupsCassandraOpsCenterRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: CassandraOpsCenterMintRead
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action: "s3:GetObject"
              Resource: ["arn:aws:s3:::{{Arguments.MintBucket}}/*"]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: /

